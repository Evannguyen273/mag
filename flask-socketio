# app.py
from flask import Flask, render_template
from flask_socketio import SocketIO, emit

app = Flask(__name__)
socketio = SocketIO(app)

def run_chat(prompt):
    # Your existing AI chat function
    return "AI Response to: " + prompt

@app.route('/')
def index():
    # Serve the chat interface
    return render_template('index.html')

@socketio.on('message')
def handle_message(message):
    print('Received message:', message)
    # Process with AI
    response = run_chat(message)
    # Send back response
    emit('response', response, broadcast=True)

if __name__ == '__main__':
    socketio.run(app, debug=True, port=8080)

// In index.html, replace the socket.io script section with:
<script>
    // Connect to Socket.IO server with explicit URL
    const socket = io('http://localhost:8080', {
        transports: ['websocket'],
        cors: {
            origin: "http://localhost:8080"
        }
    });

    const messagesDiv = document.getElementById('messages');
    const messageInput = document.getElementById('messageInput');

    // Add connection status handling
    socket.on('connect', () => {
        console.log('Connected to server');
        appendMessage('System: Connected to server');
    });

    socket.on('disconnect', () => {
        console.log('Disconnected from server');
        appendMessage('System: Disconnected from server');
    });

    socket.on('connect_error', (error) => {
        console.error('Connection error:', error);
        appendMessage('System: Connection error');
    });

    function sendMessage() {
        const message = messageInput.value.trim();
        if (message) {
            console.log('Sending message:', message);
            appendMessage('You: ' + message);
            socket.emit('message', message);
            messageInput.value = '';
        }
    }

    socket.on('response', function(response) {
        console.log('Received response:', response);
        appendMessage('AI: ' + response);
    });

    function appendMessage(message) {
        console.log('Appending message:', message);
        const messageElement = document.createElement('div');
        messageElement.textContent = message;
        messagesDiv.appendChild(messageElement);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    messageInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script>
